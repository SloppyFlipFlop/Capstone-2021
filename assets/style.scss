*,
*::before,
*::after {
    padding: 0;
    margin: 0;
    font-family: Arial, Helvetica, sans-serif;
    box-sizing: border-box;
}


/* SCSS HSL */


/* CSS HEX */

$jet: #353535ff;
$ming: #3c6e71ff;
$white: #ffffffff;
$gainsboro: #d9d9d9ff;
$indigo-dye: #284b63;
body {
    background-color: $gainsboro !important;
}


/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/

// David
nav {
    a {
        svg {
            height: 50px;
            width: 50px;
        }
    }
}

// Weekly style
.weeklyView {
    background-color: $indigo-dye;
    display: flex;
    gap: 10px !important;
    flex-flow: row nowrap;
    padding: 25px 70px;
    justify-content: space-between;
    border: 5px solid $gainsboro;
    border-radius: 1rem;
    // margin-right: 500px;
    // margin-left: 500px;
    .weekday {
        // width: 100px;
        border: 2px solid $gainsboro;
        border-left: 0;
        border-right: 0;
        &:hover {
            animation: fadeSide 300ms ease-out forwards;
            @keyframes fadeSide {
                to {
                    border-right: 2px solid $gainsboro;
                    border-left: 2px solid $gainsboro;
                }
            }
        }
        display: flex;
        flex-flow: column;
        flex-wrap: nowrap;
        align-items: center;
        // Weekday title styling
        .title {
            $fontColor: lightblue;
            font-size: 20px;
            font-family: "Newsreader", serif;
            font-weight: bold;
            color: $fontColor;
        }
        p {
            margin-bottom: 0;
            // font styling
            font-family: "Newsreader", serif;
            font-size: 25px;
            color: $gainsboro;
        }
        svg {
            color: white;
            animation: rotating 10s linear infinite;
            // Makes the icon spin where it is
            transform-origin: center;
            transform-box: fill-box;
        }
    }
}

// Animate for the rotate of the icons
@keyframes rotating {
    from {
        transform: rotateZ(0deg);
    }
    to {
        transform: rotateZ(360deg);
    }
}

// Temperature Widget
//styling
$borderWidth: 7px;
$animationTime: 1.5s;
$border-color-default: #eee;
$border-color-fill: #ff6600;
$size: 150px;
//Create how many steps
$howManySteps: 10; //this needs to be even. 
//for fun try using 20 and changine in the HTML the data-percentage to 15 or 85
.progress {
    width: $size !important;
    height: $size !important;
    line-height: $size !important;
    background: none !important;
    margin: 0 auto !important;
    box-shadow: none !important;
    position: relative !important;
    &:after {
        content: "";
        width: 100%;
        height: 100%;
        border-radius: 50%;
        border: $borderWidth solid $border-color-default;
        position: absolute !important;
        top: 0 !important;
        left: 0 !important;
    }
    >span {
        width: 50%;
        height: 100%;
        overflow: hidden;
        position: absolute;
        top: 0;
        z-index: 1;
    }
    .progress-left {
        left: 0 !important;
    }
    .progress-bar {
        width: 100%;
        height: 100%;
        background: none;
        border-width: $borderWidth;
        border-style: solid;
        position: absolute;
        top: 0 !important;
        border-color: $border-color-fill !important;
    }
    .progress-left .progress-bar {
        left: 100%;
        border-top-right-radius: ($size/2) !important;
        ;
        border-bottom-right-radius: ($size/2) !important;
        border-left: 0;
        -webkit-transform-origin: center left !important;
        transform-origin: center left !important;
        //animation: loading-2 1.5s linear forwards 1.8s;
    }
    .progress-right {
        right: 0;
        .progress-bar {
            left: -100%;
            border-top-left-radius: ($size/2);
            ;
            border-bottom-left-radius: ($size/2);
            ;
            border-right: 0;
            -webkit-transform-origin: center right;
            transform-origin: center right;
            //animation: loading-1 1.8s linear forwards;
        }
    }
    .progress-value {
        display: flex !important;
        border-radius: 50%;
        font-size: 36px !important;
        text-align: center !important;
        line-height: 20px !important;
        align-items: center !important;
        justify-content: center !important;
        height: 100% !important;
        //font-family: $work-sans;
        font-weight: 300 !important;
        div {
            margin-left: 50px !important;
        }
        span {
            font-size: 12px !important;
            text-transform: uppercase;
        }
    }
}


/* This for loop creates the 	necessary css animation names 
Due to the split circle of progress-left and progress right, we must use the animations on each side. 
*/

@for $i from 1 through $howManySteps {
    $stepName: ($i*(100 / $howManySteps));
    //animation only the left side if below 50%
    @if $i <=($howManySteps/2) {
        .progress[data-percentage="#{$stepName}"] {
            .progress-right .progress-bar {
                animation: loading-#{$i} $animationTime linear forwards;
            }
            .progress-left .progress-bar {
                animation: 0;
            }
        }
    }
    //animation only the right side if above 50%
    @if $i>($howManySteps/2) {
        .progress[data-percentage="#{$stepName}"] {
            .progress-right .progress-bar {
                animation: loading-#{($howManySteps/2)} $animationTime linear forwards; //set the animation to longest animation
            }
            .progress-left .progress-bar {
                animation: loading-#{$i - ($howManySteps/2)} $animationTime linear forwards $animationTime;
            }
        }
    }
}

//animation
@for $i from 1 through ($howManySteps/2) {
    $degrees: (180/($howManySteps/2));
    $degrees: ($degrees*$i);
    @keyframes loading-#{$i} {
        0% {
            -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
        }
        100% {
            -webkit-transform: rotate($degrees);
            transform: rotate(#{$degrees}deg);
        }
    }
}

//additional styling
.progress {
    margin-bottom: 1em;
}